{"ast":null,"code":"/*import React from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\" style={{ backgroundColor: '#f5f5f5', padding: '10px', border: '1px solid #ccc' }}>\r\n        <p className=\"label\" style={{ color: 'green' }}>{`${label} : ${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst Chart = ({ data, metric }) => {\r\n  if (!data || data.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const months = ['Jan', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  const metricsData = data.slice(1);\r\n  const metricIndex = metricsData.findIndex(row => row[0] === metric);\r\n\r\n  if (metricIndex === -1) {\r\n    return null;\r\n  }\r\n\r\n  const metricValues = metricsData[metricIndex].slice(1);\r\n  const chartData = months.map((month, index) => ({\r\n    month,\r\n    [metric]: metricValues[index]\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <LineChart width={1100} height={400} data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 50 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ccc\" />\r\n        <XAxis \r\n          dataKey=\"month\" \r\n          label={{ \r\n            value: 'Months (2023)', \r\n            position: 'insideBottom', \r\n            offset: -20,\r\n            dy: 20,\r\n            dx: -5,\r\n            style: { fill: 'white' }\r\n          }} \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold', textAnchor: 'middle' }} \r\n        />\r\n        <YAxis \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold' }} \r\n          label={{ \r\n            value: metric, \r\n            angle: -90, \r\n            position: 'insideLeft',\r\n            style: { textAnchor: 'middle', fill:'white' }\r\n          }}\r\n        />\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey={metric} stroke={'#fff'} strokeWidth={3} activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;*/","map":{"version":3,"names":[],"sources":["C:/Users/Meghna/Desktop/Meghna Manoj Nair/New York University/Job Hunt/Internships/Vera 4/frontend/src/components/Chart.js"],"sourcesContent":["/*import React from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\" style={{ backgroundColor: '#f5f5f5', padding: '10px', border: '1px solid #ccc' }}>\r\n        <p className=\"label\" style={{ color: 'green' }}>{`${label} : ${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst Chart = ({ data, metric }) => {\r\n  if (!data || data.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const months = ['Jan', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  const metricsData = data.slice(1);\r\n  const metricIndex = metricsData.findIndex(row => row[0] === metric);\r\n\r\n  if (metricIndex === -1) {\r\n    return null;\r\n  }\r\n\r\n  const metricValues = metricsData[metricIndex].slice(1);\r\n  const chartData = months.map((month, index) => ({\r\n    month,\r\n    [metric]: metricValues[index]\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <LineChart width={1100} height={400} data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 50 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ccc\" />\r\n        <XAxis \r\n          dataKey=\"month\" \r\n          label={{ \r\n            value: 'Months (2023)', \r\n            position: 'insideBottom', \r\n            offset: -20,\r\n            dy: 20,\r\n            dx: -5,\r\n            style: { fill: 'white' }\r\n          }} \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold', textAnchor: 'middle' }} \r\n        />\r\n        <YAxis \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold' }} \r\n          label={{ \r\n            value: metric, \r\n            angle: -90, \r\n            position: 'insideLeft',\r\n            style: { textAnchor: 'middle', fill:'white' }\r\n          }}\r\n        />\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey={metric} stroke={'#fff'} strokeWidth={3} activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;*/\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meghna\\\\Desktop\\\\Meghna Manoj Nair\\\\New York University\\\\Job Hunt\\\\Internships\\\\Vera 4\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from './components/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [metrics, setMetrics] = useState([]);\n  const [selectedMetric, setSelectedMetric] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const jsonData = await response.json();\n      console.log('Data:', jsonData); // Log the fetched data\n      setData(jsonData);\n      setMetrics(jsonData.slice(1).map(row => row[0])); // Extracting metric names from the first column\n      setSelectedMetric(jsonData[0][1]); // Assuming the first metric is selected initially\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleMetricChange = event => {\n    setSelectedMetric(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Green Dash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to our environmental data visualization tool for small-scale food processing plants! In today's era, prioritizing environmental sustainability is paramount, and our web application serves as a powerful tool for promoting eco-friendly practices. By offering clear insights into key environmental metrics such as water consumption, natural gas usage, grid electricity consumption, steam usage, food waste generation, solar energy production, and water recycling throughout the months of 2023, our line chart component, built using the recharts library, facilitates informed decision-making. The intuitive interface allows users to select specific metrics from a dropdown menu, enabling detailed analysis of trends and fluctuations. With a design that emphasizes clarity and usability, including organized x-axis labels for months and y-axis labels for selected metrics, our tool empowers plant managers and stakeholders to make data-driven decisions for a greener, more sustainable future.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown\",\n        value: selectedMetric,\n        onChange: handleMetricChange,\n        children: metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: metric,\n          children: metric\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        data: data.slice(1),\n        metric: selectedMetric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gcWWXMaEUGNR15p1N/Y3Ql/GXxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","App","_s","data","setData","metrics","setMetrics","selectedMetric","setSelectedMetric","fetchData","response","fetch","jsonData","json","console","log","slice","map","row","error","handleMetricChange","event","target","value","className","style","display","flexDirection","alignItems","justifyContent","height","color","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","metric","index","_c","$RefreshReg$"],"sources":["C:/Users/Meghna/Desktop/Meghna Manoj Nair/New York University/Job Hunt/Internships/Vera 4/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from './components/Chart';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [selectedMetric, setSelectedMetric] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/data');\r\n      const jsonData = await response.json();\r\n      console.log('Data:', jsonData); // Log the fetched data\r\n      setData(jsonData);\r\n      setMetrics(jsonData.slice(1).map(row => row[0])); // Extracting metric names from the first column\r\n      setSelectedMetric(jsonData[0][1]); // Assuming the first metric is selected initially\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const handleMetricChange = (event) => {\r\n    setSelectedMetric(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', color: '#fff' }}>\r\n      <header className=\"App-header\">\r\n        <h1>Green Dash</h1>\r\n        <p>Welcome to our environmental data visualization tool for small-scale food processing plants! In today's era, prioritizing environmental sustainability is paramount, and our web application serves as a powerful tool for promoting eco-friendly practices. By offering clear insights into key environmental metrics such as water consumption, natural gas usage, grid electricity consumption, steam usage, food waste generation, solar energy production, and water recycling throughout the months of 2023, our line chart component, built using the recharts library, facilitates informed decision-making. The intuitive interface allows users to select specific metrics from a dropdown menu, enabling detailed analysis of trends and fluctuations. With a design that emphasizes clarity and usability, including organized x-axis labels for months and y-axis labels for selected metrics, our tool empowers plant managers and stakeholders to make data-driven decisions for a greener, more sustainable future.</p>\r\n      </header>\r\n      <div className=\"container\">\r\n        <select className=\"dropdown\" value={selectedMetric} onChange={handleMetricChange}>\r\n          {metrics.map((metric, index) => (\r\n            <option key={index} value={metric}>{metric}</option>\r\n          ))}\r\n        </select>\r\n        <Chart data={data.slice(1)} metric={selectedMetric} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
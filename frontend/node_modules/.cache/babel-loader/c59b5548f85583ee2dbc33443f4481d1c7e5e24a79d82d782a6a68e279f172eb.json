{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Meghna\\\\Desktop\\\\Meghna Manoj Nair\\\\New York University\\\\Job Hunt\\\\Internships\\\\Vera 4\\\\frontend\\\\src\\\\components\\\\Chart.js\";\nimport React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      style: {\n        backgroundColor: '#f5f5f5',\n        padding: '10px',\n        border: '1px solid #ccc'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label\",\n        style: {\n          color: 'green'\n        },\n        children: `${label} : ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst Chart = ({\n  data,\n  metric,\n  color\n}) => {\n  if (!data || data.length === 0) {\n    return null;\n  }\n  const months = ['Jan', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const metricsData = data.slice(1);\n  const metricIndex = metricsData.findIndex(row => row[0] === metric);\n  if (metricIndex === -1) {\n    return null;\n  }\n  const metricValues = metricsData[metricIndex].slice(1);\n  const chartData = months.map((month, index) => ({\n    month,\n    [metric]: metricValues[index]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1100,\n      height: 400,\n      data: chartData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"month\",\n        label: {\n          value: '- Months (2023)',\n          position: 'insideBottom',\n          offset: -20,\n          dy: -5,\n          dx: 100,\n          style: {\n            fill: 'white'\n          }\n        },\n        stroke: \"#000\",\n        tick: {\n          fill: '#000',\n          fontWeight: 'bold'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        stroke: \"#000\",\n        tick: {\n          fill: '#000',\n          fontWeight: 'bold'\n        },\n        label: {\n          value: metric,\n          angle: -90,\n          position: 'insideLeft',\n          style: {\n            textAnchor: 'middle',\n            fill: 'white'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: metric,\n        stroke: color,\n        strokeWidth: 3,\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Chart;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"Chart\");","map":{"version":3,"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","className","style","backgroundColor","padding","border","children","color","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chart","data","metric","months","metricsData","slice","metricIndex","findIndex","row","metricValues","chartData","map","month","index","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","position","offset","dy","dx","fill","tick","fontWeight","angle","textAnchor","content","type","strokeWidth","activeDot","r","_c2","$RefreshReg$"],"sources":["C:/Users/Meghna/Desktop/Meghna Manoj Nair/New York University/Job Hunt/Internships/Vera 4/frontend/src/components/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\" style={{ backgroundColor: '#f5f5f5', padding: '10px', border: '1px solid #ccc' }}>\r\n        <p className=\"label\" style={{ color: 'green' }}>{`${label} : ${payload[0].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst Chart = ({ data, metric, color }) => {\r\n  if (!data || data.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const months = ['Jan', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  const metricsData = data.slice(1);\r\n  const metricIndex = metricsData.findIndex(row => row[0] === metric);\r\n\r\n  if (metricIndex === -1) {\r\n    return null;\r\n  }\r\n\r\n  const metricValues = metricsData[metricIndex].slice(1);\r\n  const chartData = months.map((month, index) => ({\r\n    month,\r\n    [metric]: metricValues[index]\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <LineChart width={1100} height={400} data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ccc\" />\r\n        <XAxis \r\n          dataKey=\"month\" \r\n          label={{ \r\n            value: '- Months (2023)', \r\n            position: 'insideBottom', \r\n            offset: -20,\r\n            dy: -5,\r\n            dx: 100,\r\n            style: { fill: 'white' }\r\n          }} \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold' }} \r\n        />\r\n        <YAxis \r\n          stroke=\"#000\" \r\n          tick={{ fill: '#000', fontWeight: 'bold' }} \r\n          label={{ \r\n            value: metric, \r\n            angle: -90, \r\n            position: 'insideLeft',\r\n            style: { textAnchor: 'middle', fill:'white' }\r\n          }}\r\n        />\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey={metric} stroke={color} strokeWidth={3} activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}